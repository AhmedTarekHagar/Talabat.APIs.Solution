{
	"info": {
		"_postman_id": "5ccd720d-37e7-4ebf-a0a3-3533cd887e69",
		"name": "API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24456802"
	},
	"item": [
		{
			"name": "Get Products, Brands and Types",
			"item": [
				{
					"name": "Get Products",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products?pageIndex=1&pageSize=5&sort=name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "pageIndex",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "5"
								},
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Brands",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products/brands",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products",
								"brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products/types",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products",
								"types"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sorting and Filtering",
			"item": [
				{
					"name": "GetProducts sorted by name (default case)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products?sort=name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProducts sorted by Price Ascending",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products?sort=priceAsc",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "sort",
									"value": "priceAsc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProducts sorted by Price Descending",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZG5hc3I5N0BnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9naXZlbm5hbWUiOiJBaG1lZCBOYXNyIiwiZXhwIjoxNjYyMjkxNjk0LCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxLyIsImF1ZCI6Ik15U2VjdXJlZEFwaVVzZXJzIn0.TkjlL4KD01lHWE4M9sZ4DW_topvi-T0-FdJG8ehWuvs",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/products?sort=priceDesc",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "sort",
									"value": "priceDesc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products by Brand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products?brandId=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "brandId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products by Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products?typeId=3",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "typeId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products by Brand And Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products?typeId=3&brandId=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "typeId",
									"value": "3"
								},
								{
									"key": "brandId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products by Brand And Type Sorted by price desc",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Origin",
								"value": "https://localhost:4200",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/products?typeId=3&brandId=2&sort=priceDesc",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "typeId",
									"value": "3"
								},
								{
									"key": "brandId",
									"value": "2"
								},
								{
									"key": "sort",
									"value": "priceDesc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Paged Products Page 1 Size 5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products?pageSize=1&pageIndex=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "1"
								},
								{
									"key": "pageIndex",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Paged Products By BrandId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/Products?brandId=2&pageSize=2&pageIndex=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"Products"
							],
							"query": [
								{
									"key": "brandId",
									"value": "2"
								},
								{
									"key": "pageSize",
									"value": "2"
								},
								{
									"key": "pageIndex",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products Controller",
			"item": [
				{
					"name": "Get Products",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Basket",
			"item": [
				{
					"name": "Update Basket",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"basket1\",\n  \"items\": [\n    {\n      \"id\": 4,\n      \"Name\": \".NET Black & White Mug\",\n      \"Description\": \"lorem ipsum\",\n      \"price\": 1,\n      \"quantity\": 32,\n      \"pictureUrl\": \"https://localhost:5001/images/products/2.png\",\n      \"brand\": \".NET\",\n      \"type\": \"USB Memory Stick\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/basket",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"basket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Basket",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/basket?id=basket1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"basket"
							],
							"query": [
								{
									"key": "id",
									"value": "basket1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Basket",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/basket?id=basket1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"basket"
							],
							"query": [
								{
									"key": "id",
									"value": "basket1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Handling",
			"item": [
				{
					"name": "Get Not Found Product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/notfound",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"notfound"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Null Ref Error",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/buggy/servererror",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"servererror"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get 400 Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/badrequest",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"badrequest"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get 400 Validation Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/badrequest/five",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"badrequest",
								"five"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Not Found Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/hamda",
							"host": [
								"{{url}}"
							],
							"path": [
								"hamda"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "APIs Validation",
			"item": [
				{
					"name": "Register as Rana with Exitsing email address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"Alaa ali\",\n  \"firstName\": \"Alaa\",\n  \"lastName\": \"ali\",\n  \"email\": \"alaaali@gmail.com\",\n  \"phoneNumber\": \"01122334455\",\n  \"password\": \"P@ssw0rd\",\n  \"city\": \"Giza\",\n  \"country\": \"Egypt\",\n  \"street\": \"string\",\n  \"zipCode\": \"Tahrir st.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Basket Zero Quantity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"basket1\",\n  \"items\": [\n    {\n      \"id\": 4,\n      \"productName\": \".NET Black & White Mug\",\n      \"price\": 10,\n      \"quantity\": 1,\n      \"pictureUrl\": \"https://localhost:5001/images/products/2.png\",\n      \"brand\": \".NET\",\n      \"type\": \"USB Memory Stick\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/basket",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"basket"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Identity",
			"item": [
				{
					"name": "Login as Ahmed and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('My_Token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ahmed.tarek.ronaldo@gmail.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/accounts/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"accounts",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Ahmed bad password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ahmednasr\",\n\t\"password\": \"BadPassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/accounts/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"accounts",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register as Aya and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"Aya Mohamed\",\n  \"email\": \"ayamohamed@gmail.com\",\n  \"phoneNumber\": \"01122334455\",\n  \"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/accounts/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"accounts",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Aya and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"tom@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJheWFtb2hhbWVkQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkF5YSBNb2hhbWVkIiwiZXhwIjoxNjc0NTIyMjQxLCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.TUvbN9RrqfbMhoodLslgOIB9U32Ay7YoTAgNULb6KuM",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Current User (Ahmed)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZC50YXJlay5yb25hbGRvQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkFobWVkIFRhcmVrIiwiZXhwIjoxNjc0NTIzNjQxLCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.knCrrtrtzF0LR4niBSqYiCF5PwKFn5fEFa1XPasoD1E",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer ",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/accounts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if email exists",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/accounts/emailExists?email=ahmed.tarek.ronaldo@gmail.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"accounts",
								"emailExists"
							],
							"query": [
								{
									"key": "email",
									"value": "ahmed.tarek.ronaldo@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Address (Ahmed)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZC50YXJlay5yb25hbGRvQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkFobWVkIFRhcmVrIiwiZXhwIjoxNjc0NTI1MzUxLCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.06SlYcvSKhwdIljOogRVzY5Gag2JcK9wseivfnyKE2A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZG5hc3I5N0BnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9naXZlbm5hbWUiOiJBaG1lZCBOYXNyIiwiZXhwIjoxNjYyNjQ0MjMwLCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxLyIsImF1ZCI6Ik15U2VjdXJlZEFwaVVzZXJzIn0.RtIg0EhGFEep_WdvpKtzmL6fW6c1csOeX7Nf-7T1f-g"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/accounts/address",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"accounts",
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Address (Ahmed)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZC50YXJlay5yb25hbGRvQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkFobWVkIFRhcmVrIiwiZXhwIjoxNjc0NTI1MzUxLCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.06SlYcvSKhwdIljOogRVzY5Gag2JcK9wseivfnyKE2A",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZG5hc3I5N0BnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9naXZlbm5hbWUiOiJBaG1lZCBOYXNyIiwiZXhwIjoxNjYyNzQ0Mzc3LCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxLyIsImF1ZCI6Ik15U2VjdXJlZEFwaVVzZXJzIn0.cc5Om4AabDr4ZuVhc7VXZaxXY77FgYCvowD2_TvV0Pg"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Ahmed\",\n  \"lastName\": \"Tarek\",\n  \"street\": \"update test 2\",\n  \"city\": \"New Cairo\",\n  \"country\": \"Egypt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/accounts/address",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"accounts",
								"address"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login and Save Token",
			"item": [
				{
					"name": "Login as Ahmed and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.collectionVariables.set('My_Token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ahmed.tarek.ronaldo@gmail.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/accounts/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"accounts",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Orders as OrderToReturnDto",
			"item": [
				{
					"name": "Get Orders For User (Ahmed)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{My_Token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order For User (Ahmed)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{My_Token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/orders/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders",
								"1"
							],
							"query": [
								{
									"key": "orderId",
									"value": "5",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Update Basket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZC50YXJlay5yb25hbGRvQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkFobWVkIFRhcmVrIiwiZXhwIjoxNjc1NzAwOTI5LCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.cK6LR_UeX2N8THN3d5Ow8-ylmhgFl6Ea2r6qk_4YmNw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"order1\",\n    \"items\": [\n        {\n            \"id\": 3,\n            \"Name\": \".NET Black & White Mug\",\n            \"price\": 1,\n            \"quantity\": 1,\n            \"pictureUrl\": \"https://localhost:5001/images/products/2.png\",\n            \"brand\": \".NET\",\n            \"type\": \"USB Memory Stick\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/basket",
							"host": [
								"{{url}}api"
							],
							"path": [
								"basket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checkout Order [order1] as Ahmed",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZC50YXJlay5yb25hbGRvQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkFobWVkIFRhcmVrIiwiZXhwIjoxNjc1NzAwOTI5LCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.cK6LR_UeX2N8THN3d5Ow8-ylmhgFl6Ea2r6qk_4YmNw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZC50YXJlay5yb25hbGRvQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkFobWVkIFRhcmVrIiwiZXhwIjoxNjc0NTM5Mjg2LCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.MaBhyavvgLsQ8uusFxF-OxGk9t6Oy7CnfFvPpCkzNls"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"basketId\": \"basket1\",\n  \"deliveryMethodId\": 1,\n  \"shippingAddress\": \n    {\n      \"firstName\": \"Ahmed\",\n      \"lastName\": \"Tarek\",\n      \"street\": \"street testStreet\",\n      \"city\": \"New Cairo\",\n      \"country\": \"Egypt\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/orders",
							"host": [
								"{{url}}api"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders For User (Ahmed)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZC50YXJlay5yb25hbGRvQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkFobWVkIFRhcmVrIiwiZXhwIjoxNjc1NzUwNDU4LCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.lNCtNkfdlcaX2Gussrh-ytIbdZK31szlpuHyJo2TOu0",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/orders",
							"host": [
								"{{url}}api"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order For User (Ahmed)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZC50YXJlay5yb25hbGRvQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkFobWVkIFRhcmVrIiwiZXhwIjoxNjc1NzUwNDU4LCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.lNCtNkfdlcaX2Gussrh-ytIbdZK31szlpuHyJo2TOu0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/orders/1",
							"host": [
								"{{url}}api"
							],
							"path": [
								"orders",
								"1"
							],
							"query": [
								{
									"key": "orderId",
									"value": "5",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Delivey Methods",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJhaG1lZC50YXJlay5yb25hbGRvQGdtYWlsLmNvbSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkFobWVkIFRhcmVrIiwiZXhwIjoxNjc1NzUwNDU4LCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjoiTXlTZWN1cmVkQXBpVXNlcnMifQ.lNCtNkfdlcaX2Gussrh-ytIbdZK31szlpuHyJo2TOu0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}api/orders/deliverymethods",
							"host": [
								"{{url}}api"
							],
							"path": [
								"orders",
								"deliverymethods"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://localhost:5001"
		}
	]
}